---
title: "Development Indicators by Continent"
author: "Gapminder Analytics Group"
format: 
  html:
    page-layout: custom
    code-fold: true
execute:
  echo: true  # Ensures code is executed when rendering
  warning: false
  error: false
  result: 'interactive'  # Ensures that the output is interactive
---

``` {python}
import numpy as np

# Step 1: Create a 4x4 matrix A of rank r = 2 by multiplying a (4x2) matrix B with a (2x4) matrix C.
np.random.seed(0)  # For reproducibility

B = np.random.randn(4, 2)
C = np.random.randn(2, 4)
A = B @ C  # This product has rank at most 2

# Step 2: Perform a QR decomposition on A.
# np.linalg.qr returns Q (4x4) and R (4x4) such that A = Q @ R.
Q, R = np.linalg.qr(A)

# Step 3: Print A, Q, R, and verify reconstruction.
print("Matrix A (4x4, rank â‰¤ 2):")
print(np.round(A, 4), "\n")

print("Matrix Q (4x4, orthonormal):")
print(np.round(Q, 4), "\n")

print("Matrix R (4x4, upper triangular):")
print(np.round(R, 4), "\n")

# Reconstruct A from Q @ R
reconstructed_A = Q @ R
print("Reconstructed A (Q @ R):")
print(np.round(reconstructed_A, 4), "\n")

# Step 4: Check the rank of A using its singular values.
singular_values = np.linalg.svd(A, compute_uv=False)
print("Singular values of A:", np.round(singular_values, 4))
rank_A = np.sum(singular_values > 1e-10)
print("Rank of A:", rank_A)

```